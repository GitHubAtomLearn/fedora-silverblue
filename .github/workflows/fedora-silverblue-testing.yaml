name: "Build Fedora SilverBlue Testing Image"

env:
  NAME: "fedora-silverblue-testing"
  REGISTRY: "quay.io/operatement"
  BASEIMAGE: "quay.io/fedora-ostree-desktops/silverblue:42"
  # Temporary switch to quay.io/fedora/fedora-silverblue:42
  #BASEIMAGE: "quay.io/fedora/fedora-silverblue:42"

on:

#  pull_request:
#    branches:
#      - main
#    paths:
#      - 'fedora-silverblue/**'
#      - '.github/workflows/fedora-silverblue-testing.yaml'
      
#  push:
#    branches:
#      - main
#    paths:
#      - 'fedora-silverblue/**'
#      - '.github/workflows/fedora-silverblue-testing.yaml'
      
#  schedule:
#    - cron: '0 4 * * *'
    # Temporary switch to quay.io/fedora/fedora-silverblue:42
    #- cron: '30 13 * * *'
    
  workflow_dispatch:
    inputs:
      version:
        description: 'Override version label (org.opencontainers.image.version)'
        required: false
        default: ''

permissions: read-all

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs for
# pull requests only.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  # cancel-in-progress: ${{ github.event_name == 'pull_request' }}
  cancel-in-progress: true

jobs:
  # reclaim_disk_space_in_the_runner:
    # runs-on: ubuntu-24.04
    # steps:
      # - name: Reclaim disk space in the runner
        # run: |
          # set -xeuo pipefail
          # sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          # echo "Available disk storage:"
          # df -h
  build-push-image:
    # needs: reclaim_disk_space_in_the_runner
    runs-on: ubuntu-24.04
    # steps:
      # - name: Reclaim disk space in the runner
        # run: |
          # set -xeuo pipefail
          # sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          # echo "Available disk storage:"
          # df -h
    container:
      image: quay.io/podman/stable
      # options: "--security-opt=label=disable --privileged --user 0:0 --device=/dev/kvm --device=/dev/fuse --volume /:/run/host:rw --volume /var/run/docker.sock:/var/run/docker.sock"
      options: "--security-opt=label=disable --privileged --user 0:0 --device=/dev/kvm --device=/dev/fuse --volume /:/run/host:rw --volume /mnt:/mnt --volume /var/run/docker.sock:/var/run/docker.sock --workdir=/mnt"
    steps:

      - name: Reclaim disk space in the container
        run: |
          set -xeuo pipefail
          sudo rm -rf /usr/share/dotnet /usr/local/lib/android /opt/ghc /opt/hostedtoolcache/CodeQL
          echo "Available disk storage:"
          df -h

      - name: Fixup GitHub homedir
        run: |
          set -xeuo pipefail
          mkdir -p /github/home/.docker/
          ls -lah /
          df -h /github/home
          df -h /mnt

      - name: Install tools
        run: |
          set -xeuo pipefail
          dnf install -y git-core jq rpm-ostree buildah skopeo --exclude container-selinux
          dnf clean all

      - name: Set alternate location of image store
        run: |
            set -xeuo pipefail
            sed -i 's/^\# imagestore = ""$/imagestore = "\/mnt"/' /usr/share/containers/storage.conf
            grep -E '^imagestore = ".*"$' /usr/share/containers/storage.conf

      - name: Checkout Repo
        uses: actions/checkout@v5

      - name: Figure out version
        id: version
        run: |
          set -xexo pipefail
          if [[ -n ${VERSION} ]]; then
            version="${VERSION}"
          else
            version_base="$(skopeo inspect docker://${BASEIMAGE} | jq -r '.Labels."org.opencontainers.image.version"')"
            version_derived="$(skopeo inspect docker://${REGISTRY}/${NAME} | jq -r '.Labels."org.opencontainers.image.version"' || true)"
            if [[ -z "${version_derived}" ]]; then
              version="${version_base}"
            elif [[ "${version_base}" == "${version_derived}" ]]; then
              patch="${version_base##*\.}"
              ((patch++)) || true
              version="${version_base%\.*}.${patch}"
            else
              version="${version_base}"
            fi
          fi
          echo "Using version: ${version}"
          echo "version=${version}" >> "$GITHUB_OUTPUT"
        env:
          VERSION: ${{ inputs.version }}

      - name: Build SilverBlue 42 Container Image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.NAME }}
          # tags: '42'
          tags: build
          containerfiles: ${{ env.NAME }}/Containerfile-42
          context: ${{ env.NAME }}
          layers: false
          oci: true
          # labels: org.opencontainers.image.version=${{ steps.version.outputs.version }}

      - name: Rechunk container image
        run: |
          set -xexo pipefail
          # podman image rm quay.io/fedora-ostree-desktops/silverblue:42
          podman image prune --force --build-cache
          podman image prune --force
          df -h
          rpm-ostree experimental compose build-chunked-oci \
            --bootc --format-version=1 \
            --from localhost/${NAME}:build \
            --output containers-storage:localhost/${NAME}:rechunked
          df -h

      - name: Write NOP Containerfile
        run: |
          set -xexo pipefail
          echo "FROM localhost/${NAME}:rechunked" > ${NAME}/Containerfile.labels

      - name: Add labels to container image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.NAME }}
          # tags: latest
          tags: '42'
          containerfiles: ${{ env.NAME }}/Containerfile.labels
          context: ${{ env.NAME }}
          layers: false
          oci: true
          labels: |
            org.opencontainers.image.version=${{ steps.version.outputs.version }}
            org.opencontainers.image.title="Fedora SilverBlue 42"
            org.opencontainers.image.description="Customized image of Fedora SilverBlue 42"
            org.opencontainers.image.source="https://github.com/GitHubAtomLearn/fedora-silverblue"
            org.opencontainers.image.licenses="MIT"

      # - name: Build SilverBlue 42 Testing Container Image
        # uses: redhat-actions/buildah-build@v2
        # with:
          # image: ${{ env.NAME }}
          # tags: '42-testing'
          # containerfiles: ${{ env.NAME }}/Containerfile-42-testing
          # context: ${{ env.NAME }}
          # layers: false
          # oci: true
          # labels: org.opencontainers.image.version=${{ steps.version.outputs.version }}

      # SilverBlue 42 Testing Container Image
      # - name: Push SilverBlue 42 Testing Image to Container Registry
        # uses: redhat-actions/push-to-registry@v2
        # id: push-42-testing
        # if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        # with:
          # username: ${{ secrets.BOT_USERNAME }}
          # password: ${{ secrets.BOT_SECRET }}
          # image: ${{ env.NAME }}
          # registry: ${{ env.REGISTRY }}
          # tags: '42-testing'
          # extra-args: |
            # --compression-format=zstd
            # --compression-level=19

      # - name: Sign SilverBlue Testing 42 Container Image
        # if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        # run: |
          # cosign sign --yes --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-42-testing.outputs.digest }}
        # env:
          # COSIGN_EXPERIMENTAL: false
          # COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
