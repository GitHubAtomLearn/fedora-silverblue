name: "Build Fedora SilverBlue Images"

env:
  NAME: "fedora-silverblue"
  REGISTRY: "quay.io/operatement"
  BASEIMAGE: "quay.io/fedora-ostree-desktops/silverblue:41"

on:

  pull_request:
    branches:
      - main
    paths:
      - 'fedora-silverblue/**'
      - '.github/workflows/fedora-silverblue.yaml'
      
  push:
    branches:
      - main
    paths:
      - 'fedora-silverblue/**'
      - '.github/workflows/fedora-silverblue.yaml'
      
  schedule:
    - cron: '0 4 * * *'
    
  workflow_dispatch:
    inputs:
      version:
        description: 'Override version label (org.opencontainers.image.version)'
        required: false
        default: ''

permissions: read-all

# Prevent multiple workflow runs from racing to ensure that pushes are made
# sequentialy for the main branch. Also cancel in progress workflow runs for
# pull requests only.
concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: ${{ github.event_name == 'pull_request' }}

jobs:
  build-push-image:
    runs-on: ubuntu-24.04
    steps:
      - name: Checkout Repo
        uses: actions/checkout@v4

      - name: Figure out version
        id: version
        run: |
          set -exo pipefail
          if [[ -n ${VERSION} ]]; then
            version="${VERSION}"
          else
            version_base="$(skopeo inspect docker://${BASEIMAGE} | jq -r '.Labels."org.opencontainers.image.version"')"
            version_derived="$(skopeo inspect docker://${REGISTRY}/${NAME} | jq -r '.Labels."org.opencontainers.image.version"' || true)"
            if [[ -z "${version_derived}" ]]; then
              version="${version_base}"
            elif [[ "${version_base}" == "${version_derived}" ]]; then
              patch="${version_base##*\.}"
              ((patch++)) || true
              version="${version_base%\.*}.${patch}"
            else
              version="${version_base}"
            fi
          fi
          echo "Using version: ${version}"
          echo "version=${version}" >> "$GITHUB_OUTPUT"
        env:
          VERSION: ${{ inputs.version }}

      - name: Build SilverBlue Container Image
        uses: redhat-actions/buildah-build@v2
        with:
          image: ${{ env.NAME }}
          tags: '41'
          containerfiles: ${{ env.NAME }}/Containerfile
          context: ${{ env.NAME }}
          layers: false
          oci: true

#      - name: Build SilverBlue 41 Base Container Image
#        uses: redhat-actions/buildah-build@v2
#        with:
#          image: ${{ env.NAME }}
#          tags: '41-base'
#          containerfiles: ${{ env.NAME }}/Containerfile-41-base
#          context: ${{ env.NAME }}
#          layers: false
#          oci: true
#
#      - name: Build SilverBlue RawHide Base Container Image
#        uses: redhat-actions/buildah-build@v2
#        with:
#          image: ${{ env.NAME }}
#          tags: 'rawhide-base'
#          containerfiles: ${{ env.NAME }}/Containerfile-rawhide-base
#          context: ${{ env.NAME }}
#          layers: false
#          oci: true

      - name: Login to Container Registry
        uses: redhat-actions/podman-login@v1
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          registry: ${{ env.REGISTRY }}
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}

      - uses: sigstore/cosign-installer@v3.6.0
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'

      # Container Image
      - name: Push to Container Registry
        uses: redhat-actions/push-to-registry@v2
        id: push
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        with:
          username: ${{ secrets.BOT_USERNAME }}
          password: ${{ secrets.BOT_SECRET }}
          image: ${{ env.NAME }}
          registry: ${{ env.REGISTRY }}
          tags: '41'
          extra-args: |
            --compression-format=zstd:chunked
            --compression-level=19

      - name: Sign Container Image
        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
        run: |
          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push.outputs.digest }}
        env:
          COSIGN_EXPERIMENTAL: false
          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}

#      # 41 Base Container Image
#      - name: Push 41 Base to Container Registry
#        uses: redhat-actions/push-to-registry@v2
#        id: push-41-base
#        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
#        with:
#          username: ${{ secrets.BOT_USERNAME }}
#          password: ${{ secrets.BOT_SECRET }}
#          image: ${{ env.NAME }}
#          registry: ${{ env.REGISTRY }}
#          tags: '41-base'
#          extra-args: |
#            --compression-format=zstd:chunked
#            --compression-level=19
#
#      - name: Sign 41 Base Container Image
#        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
#        run: |
#          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-41-base.outputs.digest }}
#        env:
#          COSIGN_EXPERIMENTAL: false
#          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
#
#      # Rawhide Base Container Image
#      - name: Push Rawhide Base to Container Registry
#        uses: redhat-actions/push-to-registry@v2
#        id: push-rawhide-base
#        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
#        with:
#          username: ${{ secrets.BOT_USERNAME }}
#          password: ${{ secrets.BOT_SECRET }}
#          image: ${{ env.NAME }}
#          registry: ${{ env.REGISTRY }}
#          tags: 'rawhide-base'
#          extra-args: |
#            --compression-format=zstd:chunked
#            --compression-level=19
#
#      - name: Sign Rawhide Base Container Image
#        if: (github.event_name == 'push' || github.event_name == 'schedule' || github.event_name == 'workflow_dispatch') && github.ref == 'refs/heads/main'
#        run: |
#          cosign sign -y --key env://COSIGN_PRIVATE_KEY ${{ env.REGISTRY }}/${{ env.NAME }}@${{ steps.push-rawhide-base.outputs.digest }}
#        env:
#          COSIGN_EXPERIMENTAL: false
#          COSIGN_PRIVATE_KEY: ${{ secrets.COSIGN_PRIVATE_KEY }}
