FROM quay.io/fedora-ostree-desktops/silverblue:41
# Temporary switch to quay.io/fedora/fedora-silverblue:41
#FROM quay.io/fedora/fedora-silverblue:41

# Keep container image for 3 weeks
#LABEL quay.expires-after=3w

LABEL org.opencontainers.image.title="Fedora SilverBlue 41"
LABEL org.opencontainers.image.description="Customized image of Fedora SilverBlue 41"
LABEL org.opencontainers.image.source="https://github.com/GitHubAtomLearn/fedora-silverblue"
LABEL org.opencontainers.image.licenses="MIT"
#LABEL quay.expires-after=""

# Copy custom config to /usr & /etc
#COPY usr usr
#COPY etc etc

# - Install RPM Fusion Free and Nonfree Repositories
# - Install NVIDIA driver
# - Replace noopenh264 with openh264
# - Replace nano with vim
# - Install various packages
# - Enable libvirtd
# - Misc /var cleanup
# - Remove SetUID/SetGID bits

#RUN dnf --assumeyes install \
#    https://mirrors.rpmfusion.org/free/fedora/rpmfusion-free-release-$(rpm --eval %fedora).noarch.rpm \
#    https://mirrors.rpmfusion.org/nonfree/fedora/rpmfusion-nonfree-release-$(rpm --eval %fedora).noarch.rpm \
#    && \
RUN dnf swap --assumeyes --allowerasing noopenh264 mozilla-openh264 \
    && \
    dnf swap --assumeyes --allowerasing nano vim-default-editor \
    && \
    dnf --assumeyes install \
#        akmod-nvidia \
        htop \
        iotop \
        netcat \
        sysprof \
        arm-image-installer \
        butane \
        coreos-installer \
        virt-install \
        virt-manager \
        smartmontools \
    && \
    systemctl enable libvirtd.socket \
    && \
    rm --recursive --force /var/lib/unbound/root.key \
    && \
    chmod ug-s \
        /usr/bin/chage \
        /usr/bin/chfn \
        /usr/bin/chsh \
        /usr/bin/gpasswd \
        /usr/bin/newgrp \
        /usr/bin/passwd \
        /usr/bin/vmware-user-suid-wrapper \
    && \
    rpm-ostree cleanup --repomd \
    && \
    dnf upgrade --assumeyes --enablerepo=updates-testing --refresh --advisory=FEDORA-2024-3945fdf385 \
    && \
    dnf clean all

# - Remove ostree-grub2, setup composefs, rebuild initramfs
# - Install bootupd and generate metadata
#RUN rpm-ostree --assumeyes override remove ostree-grub2 && \
#RUN dnf --assumeyes remove ostree-grub2 && \
#    echo -e "[composefs]\nenabled=yes" >> /usr/lib/ostree/prepare-root.conf && \
#    export KERNEL_VERSION="$(rpm --query --all kernel --queryformat '%{VERSION}-%{RELEASE}.%{ARCH}')" && \
#    stock_arguments=$(lsinitrd "/lib/modules/${KERNEL_VERSION}/initramfs.img" | grep '^Arguments: ' | sed 's/^Arguments: //') && \
#    mkdir --parents /tmp/dracut /var/roothome && \
##    mkdir --parents /tmp/dracut /var/roothome /usr/lib/ostree-boot/efi/EFI && \
#    bash <(/usr/bin/echo "dracut $stock_arguments") && \
#    rm --recursive --force /var/* /tmp/*  && \
#    mv --verbose /boot/initramfs*.img "/lib/modules/${KERNEL_VERSION}/initramfs.img" #\
##    && \
##    /usr/bin/bootupctl backend generate-update-metadata \
##    && \
##    rpm-ostree cleanup --repomd
